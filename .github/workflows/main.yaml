name: QA & Tests

on:
  push:
  schedule:
    - cron: '0 8 * * 1' # At 08:00 on Monday

env:
  DB_DRIVER: postgresql
  DB_USER: vspoint
  DB_PASS: passw0rd
  DB_NAME: vspoint
  DB_HOST: localhost
  DB_PORT: 5432
  DOCTRINE_PROXY_AUTOGENERATE: 0

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  parallel-lint:
    name: üîé Parallel lint
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ 'ubuntu-24.04' ]
        php-versions: [ '8.4' ]
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: üêò Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring
          coverage: none

      - name: üì• Install dependencies
        uses: ramsey/composer-install@v3
        with:
          dependency-versions: 'locked'

      - name: üîé Parallel lint
        run: php ./vendor/bin/parallel-lint --exclude ./.git --exclude ./vendor --exclude ./var .

  ecs:
    name: ‚úèÔ∏èÔ∏è ECS
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ 'ubuntu-24.04' ]
        php-versions: [ '8.4' ]
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: üêò Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring
          coverage: none

      - name: üì• Install dependencies
        uses: ramsey/composer-install@v3
        with:
          dependency-versions: 'locked'

      - name: ‚úèÔ∏èÔ∏è ECS
        run: php ./vendor/bin/ecs

  phpstan:
    name: üü©Ô∏èÔ∏è PHPStan
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ 'ubuntu-24.04' ]
        php-versions: [ '8.4' ]
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: üêò Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring
          coverage: none

      - name: üì• Install dependencies
        uses: ramsey/composer-install@v3
        with:
          dependency-versions: 'locked'

      - name: üü©Ô∏èÔ∏è PHPStan
        run: php ./vendor/bin/phpstan --ansi

  rector:
    name: üõ†Ô∏è Rector
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ 'ubuntu-24.04' ]
        php-versions: [ '8.4' ]
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: üêò Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring
          coverage: none

      - name: üì• Install dependencies
        uses: ramsey/composer-install@v3
        with:
          dependency-versions: 'locked'

      - name: üõ†Ô∏è Rector
        run: php ./vendor/bin/rector process --dry-run --ansi

  phpunit:
    name: üßÆ PHPUnit
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ 'ubuntu-24.04' ]
        php-versions: [ '8.4' ]
        postgres-version: [ '17.4-alpine' ]
    # Docs: https://docs.github.com/en/actions/using-containerized-services
    services:
      postgres:
        image: 'postgres:${{ matrix.postgres-version }}'
        env:
          POSTGRES_USER: '${{env.DB_USER}}'
          POSTGRES_PASSWORD: '${{env.DB_PASS}}'
          POSTGRES_DB: '${{env.DB_NAME}}'
        ports:
          - 5432/tcp
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: üêò Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, intl, pdo_sqlite, pgsql
          coverage: xdebug
          # ini-values: post_max_size=256M, max_execution_time=180

      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: üì• Install dependencies
        uses: ramsey/composer-install@v3
        with:
          dependency-versions: 'locked'

      - name: üíæ Prepare database + run migration
        env:
          DATABASE_URL: ${{ env.DB_DRIVER }}://${{ env.DB_USER }}:${{ env.DB_PASS }}@${{ env.DB_HOST }}:${{ job.services.postgres.ports['5432'] }}/${{ env.DB_NAME }}
        run: |
          php ./console migrations:migrate --no-interaction
          php ./console doctrine:fixtures:load --no-interaction
          php ./console orm:generate-proxies

      - name: üßÆ PHPUnit
        env:
          DATABASE_URL: ${{ env.DB_DRIVER }}://${{ env.DB_USER }}:${{ env.DB_PASS }}@${{ env.DB_HOST }}:${{ job.services.postgres.ports['5432'] }}/${{ env.DB_NAME }}
        run: php ./vendor/bin/phpunit --coverage-text --coverage-clover=clover.xml

      - name: Upload coverage file
        uses: actions/upload-artifact@v4
        with:
          name: '${{ github.job }}-coverage'
          path: 'clover.xml'
